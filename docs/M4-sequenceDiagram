@startuml
Main -> ConstructParser : beginParsing()

ConstructParser -> ASMController : ASMController()

ASMController -> MegaContainer : MegaContainer()
MegaContainer --> ASMController : returns new MegaContainer

ASMController -> FileReader : blockEm()
FileReader --> ASMController : returns filled HashSet<String>

loop 
ASMController -> ASM : classReader()
ASM --> ASMController : returns new classReader

ASMController -> ASM : classNode()
ASM --> ASMController : returns new classNode

ASMController -> Class : Class()
Class --> ASMController : returns new class container

loop
ASMController -> ASM : classReader()
ASM --> ASMController : returns new classReader

ASMController -> ASM : classNode()
ASM --> ASMController : returns new classNode

ASMController -> Field: Field()
Field--> ASMController : returns new field container

loop
ASMController -> Relation: Relation()
Relation --> ASMController : returns new relation container
end

end

loop 
ASMController -> ASM : classReader()
ASM --> ASMController : returns new classReader

ASMController -> ASM : classNode()
ASM --> ASMController : returns new classNode

ASMController -> Method: Method()
Method--> ASMController : returns new method container

loop
ASMController -> Relation: Relation()
Relation --> ASMController : returns new relation container
end

loop 
ASMController -> ASM : classReader()
ASM --> ASMController : returns new classReader

ASMController -> ASM : classNode()
ASM --> ASMController : returns new classNode

ASMController -> Argument: Argument()
Argument --> ASMController : returns new argument container

loop
ASMController -> Relation: Relation()
Relation --> ASMController : returns new relation container
end

end
end
end


loop 
ASMController -> ASM : classReader()
ASM --> ASMController : returns new classReader

ASMController -> ASM : classNode()
ASM --> ASMController : returns new classNode

ASMController -> Interface : Interface()
Interface --> ASMController : returns new Interface container

loop
ASMController -> Relation: Relation()
Relation --> ASMController : returns new relation container
end

loop 
ASMController -> ASM : classReader()
ASM --> ASMController : returns new classReader

ASMController -> ASM : classNode()
ASM --> ASMController : returns new classNode

ASMController -> Method: Method()
Method--> ASMController : returns new method container

loop
ASMController -> Relation: Relation()
Relation --> ASMController : returns new relation container
end

loop 
ASMController -> ASM : classReader()
ASM --> ASMController : returns new classReader

ASMController -> ASM : classNode()
ASM --> ASMController : returns new classNode

ASMController -> Argument: Argument()
Argument --> ASMController : returns new method container

loop
ASMController -> Relation: Relation()
Relation --> ASMController : returns new relation container
end

end
end
end

ConstructParser -> ASMController : retrieve()
ASMController --> ConstructParser : returns filled MegaContainer

alt
ConstructParser -> DiagramUMLforPlantUML : constructFinalString()
DiagramUMLforPlantUML --> ConstructParser : returns String of PlantUML code
else
ConstructParser -> SequenceUMLforPlantUML : constructFinalString()
SequenceUMLforPlantUML --> ConstructParser : returns String of PlantUML code
end

ConstructParser -> LogWrite : writeText(fileName)

ConstructParser --> Main : Progam returns as complete
Main -> UMLsvgCreator : Program generates SVG
@enduml